{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isVisible","setVisible","isReversed","setIsReversed","isSorted","setIsSorted","NONE","sortBy","setSortBy","newGoods","sort","good1","good2","LENGTH","length","ALPABET","localeCompare","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAgBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAME,IAAME,EAAM,WACjB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA4BN,mBAASH,EAASU,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAsBMC,EAAQ,UAAOZ,GAoBrB,OAlBIO,GACFK,EAASC,MAAK,SAACC,EAAOC,GACpB,OAAQL,GACN,KAAKX,EAASiB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKlB,EAASmB,QACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QAAS,OAAO,MAKlBV,GACFO,EAASQ,UAIT,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,UACIlB,GACA,wBACEmB,KAAK,SACLD,UAAU,cACVE,QA/Ce,kBAAMnB,GAAYD,IA4CnC,qBAUHA,GACC,sBAAKkB,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,SACIT,EAASY,KAAI,SAACC,GAAD,OACb,oBAEEJ,UAAU,YAFZ,SAIGI,GAHIA,QAQX,wBACEJ,UAAU,cACVE,QAnEM,kBAAMjB,GAAeD,IAoE3BiB,KAAK,SAHP,qBAQA,wBACED,UAAU,cACVE,QAzEI,WACZZ,EAAUZ,EAASU,MACnBH,GAAc,GACdE,GAAY,IAuEJc,KAAK,SAHP,mBAQA,wBACED,UAAU,cACVE,QA3EW,WACnBf,GAAY,GACZG,EAAUZ,EAASiB,SA0EXM,KAAK,SAHP,4BAQA,wBACED,UAAU,cACVE,QA9EmB,WAC3Bf,GAAY,GACZG,EAAUZ,EAASmB,UA6EXI,KAAK,SAHP,wCCpHVI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.eaa68fe4.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport const App = () => {\n  const [isVisible, setVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isSorted, setIsSorted] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n\n  const visibleGoodsList = () => setVisible(!isVisible);\n\n  const reverse = () => setIsReversed(!isReversed);\n\n  const reset = () => {\n    setSortBy(SortType.NONE);\n    setIsReversed(false);\n    setIsSorted(false);\n  };\n\n  const sortByLength = () => {\n    setIsSorted(true);\n    setSortBy(SortType.LENGTH);\n  };\n\n  const sortByAlphabetically = () => {\n    setIsSorted(true);\n    setSortBy(SortType.ALPABET);\n  };\n\n  const newGoods = [...goodsFromServer];\n\n  if (isSorted) {\n    newGoods.sort((good1, good2): number => {\n      switch (sortBy) {\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n\n        default: return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    newGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__start\">\n        {!isVisible && (\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={visibleGoodsList}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {isVisible && (\n        <div className=\"App__container\">\n          <ul className=\"App__list\">\n            {(newGoods.map((good) => (\n              <li\n                key={good}\n                className=\"App__item\"\n              >\n                {good}\n              </li>\n            )))}\n          </ul>\n\n          <button\n            className=\"App__button\"\n            onClick={reverse}\n            type=\"button\"\n          >\n            Reverse\n          </button>\n\n          <button\n            className=\"App__button\"\n            onClick={reset}\n            type=\"button\"\n          >\n            Reset\n          </button>\n\n          <button\n            className=\"App__button\"\n            onClick={sortByLength}\n            type=\"button\"\n          >\n            Sort by length\n          </button>\n\n          <button\n            className=\"App__button\"\n            onClick={sortByAlphabetically}\n            type=\"button\"\n          >\n            Sort alphabetically\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}